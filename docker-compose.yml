version: "3.8"
services:
  zookeeper:
    image: zookeeper:3.7.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper

#    ports:
#      - target: 9094
#        published: 9094
#        protocol: tcp
#        mode: host
    ports:
      - "9092:9092"
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      LOG4J_LOGGER_KAFKA_AUTHORIZER_LOGGER: DEBUG

  clientsdb:
    image: postgres:14
    container_name: clientsdb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    expose:
      - 5432
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=trypassword
      - POSTGRES_USER=Yulia_Zaitseva
      - POSTGRES_DB=clients
    restart: unless-stopped
  clients-service:
    image: docker.io/library/clients-service:0.0.1-SNAPSHOT
    container_name: clients-service
    expose:
      - 8080
    ports:
      - "8080:8080"
      - "5005:5005"
    environment:
      JAVA_OPTS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    depends_on:
      - clientsdb
      - orders-service
  drivers-service:
    image: docker.io/library/drivers-service:0.0.1-SNAPSHOT
    container_name: drivers-service
    expose:
      - 8082
    ports:
      - "8082:8082"
      - "5003:5003"
    depends_on:
      - drivers-db
      - orders-service
      - order-history-service
    environment:
      JAVA_OPTS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5003
  drivers-db:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=trypassword
      - POSTGRES_USER=Yulia_Zaitseva
      - POSTGRES_DB=drivers
    ports:
      - "5434:5432"
  orders-service:
    image: docker.io/library/orders-service:0.0.1-SNAPSHOT
    container_name: orders-service
    expose:
      - 8081
    ports:
      - "8081:8081"
      - "5006:5006"
    depends_on:
      - orders-db
      - kafka
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      JAVA_OPTS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006
  orders-db:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=trypassword
      - POSTGRES_USER=Yulia_Zaitseva
      - POSTGRES_DB=orders
    ports:
      - "5433:5432"
  order-history-service:
    image: docker.io/library/order-history-service:0.0.1-SNAPSHOT
    container_name: order-history-service
    expose:
      - 8083
    ports:
      - "8083:8083"
      - "5004:5004"
    depends_on:
      - order-history-db
      - kafka
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      JAVA_OPTS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5004
  order-history-db:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=trypassword
      - POSTGRES_USER=Yulia_Zaitseva
      - POSTGRES_DB=history
    ports:
      - "5435:5432"
volumes:
  postgres-data:
